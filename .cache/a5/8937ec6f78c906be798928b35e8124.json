{"id":"OA8l","dependencies":[{"name":"/Users/jonathanpardofuentes/Documents/ESPOSO/Master Gerencia en Operaciones Estrtegicas/ADTSimulation/package.json","includedInParent":true,"mtime":1734554305095},{"name":"/Users/jonathanpardofuentes/Documents/ESPOSO/Master Gerencia en Operaciones Estrtegicas/ADTSimulation/node_modules/diagram-js/package.json","includedInParent":true,"mtime":1734551985151}],"generated":{"js":"\"use strict\";function t(t){this._commandStack=t.get(\"commandStack\",!1)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=t,t.$inject=[\"injector\"],t.prototype.allowed=function(t,e){var c=!0,o=this._commandStack;return o&&(c=o.canExecute(t,e)),void 0===c||c};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":19,"column":15},"generated":{"line":1,"column":13}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"Rules","original":{"line":19,"column":24},"generated":{"line":1,"column":22}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"injector","original":{"line":19,"column":30},"generated":{"line":1,"column":24}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":20,"column":2},"generated":{"line":1,"column":27}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"_commandStack","original":{"line":20,"column":7},"generated":{"line":1,"column":32}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"injector","original":{"line":20,"column":23},"generated":{"line":1,"column":46}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"get","original":{"line":20,"column":32},"generated":{"line":1,"column":48}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":20,"column":36},"generated":{"line":1,"column":52}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":20,"column":52},"generated":{"line":1,"column":68}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":71}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":78}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":93}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":101}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":114}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":115}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":122}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":126}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":134}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":50,"column":1},"generated":{"line":1,"column":142}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"Rules","original":{"line":23,"column":0},"generated":{"line":1,"column":144}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"$inject","original":{"line":23,"column":6},"generated":{"line":1,"column":146}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":23,"column":16},"generated":{"line":1,"column":154}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":23,"column":18},"generated":{"line":1,"column":155}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"Rules","original":{"line":39,"column":0},"generated":{"line":1,"column":167}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"prototype","original":{"line":39,"column":6},"generated":{"line":1,"column":169}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"allowed","original":{"line":39,"column":16},"generated":{"line":1,"column":179}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":39,"column":26},"generated":{"line":1,"column":187}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"action","original":{"line":39,"column":35},"generated":{"line":1,"column":196}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"context","original":{"line":39,"column":43},"generated":{"line":1,"column":198}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":40,"column":2},"generated":{"line":1,"column":201}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"allowed","original":{"line":40,"column":6},"generated":{"line":1,"column":205}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":40,"column":16},"generated":{"line":1,"column":208}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"commandStack","original":{"line":42,"column":6},"generated":{"line":1,"column":210}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":42,"column":21},"generated":{"line":1,"column":212}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"_commandStack","original":{"line":42,"column":26},"generated":{"line":1,"column":217}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","original":{"line":49,"column":2},"generated":{"line":1,"column":231}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"commandStack","original":{"line":44,"column":6},"generated":{"line":1,"column":238}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"allowed","original":{"line":45,"column":4},"generated":{"line":1,"column":242}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"commandStack","original":{"line":45,"column":14},"generated":{"line":1,"column":244}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"canExecute","original":{"line":45,"column":27},"generated":{"line":1,"column":246}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"action","original":{"line":45,"column":38},"generated":{"line":1,"column":257}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"context","original":{"line":45,"column":46},"generated":{"line":1,"column":259}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"undefined","original":{"line":49,"column":21},"generated":{"line":1,"column":268}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"allowed","original":{"line":49,"column":9},"generated":{"line":1,"column":272}},{"source":"node_modules/diagram-js/lib/features/rules/Rules.js","name":"allowed","original":{"line":49,"column":40},"generated":{"line":1,"column":275}}],"sources":{"node_modules/diagram-js/lib/features/rules/Rules.js":"/**\n * @typedef {import('didi').Injector} Injector\n */\n\n/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nexport default function Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {string} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};"},"lineCount":null}},"error":null,"hash":"ade70fecb2a5596b001df8fcc91432de","cacheData":{"env":{}}}